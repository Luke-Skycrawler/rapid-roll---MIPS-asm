.text 0x0
addi $s7,$zero,0x2fff
nor $s7,$s7,$zero           //s7 = 0xffffd000
addi $s6,$zero,12
sll $s6, $s6,16             //s6 = 0x000c0000
//addi $$t0,$$t0,0x0741       //background black, text white
addi $s5,$zero,4800
sll $s5,$s5,2
jal up_spike
addi $a0,$zero,980
jal broad
addi $a0,$a0,1560
jal broad
addi $a0,$a0,3280
jal spike
addi $a0,$a0,-300
jal heart
addi $a0,$a0,-20
jal ball
j cursor
end:
j end
up_spike:                    //stack pointer not used, static not stored
    addi $s0,$zero,0
    addi $s1,$zero,320
    addi $t1,$zero,0x0720
    loop_0:
        add $t0,$s0,$s6
        sw $t1,0($t0)
        addi $s0,$s0,4
    bne $s0,$s1,loop_0
    addi $s0,$zero,320
    addi $s1,$zero,640
    addi $t1,$zero,0x7056
    loop_1:
        add $t0,$s0,$s6
        sw $t1,0($t0)
        addi $s0,$s0,4
    bne $s0,$s1,loop_1
    addi $s0,$zero,640
    addi $t1,$zero,0x7020
    loop_2:
        add $t0,$s0,$s6		
        sw $t1,0($t0)			
        addi $s0,$s0,4
    bne $s0,$s5,loop_2	//$$s5 page text count
jr $ra
broad:
    move $s0,$a0
    addi $s1,$s0,32
    addi $t1,$zero,0x1720
    loop_broad:
        add $t0,$s0,$s6
        sw $t1,0($t0)
        addi $s0,$s0,4
    bne $s0,$s1,loop_broad
jr $ra
spike:
    move $s0,$a0
    addi $s1,$s0,32
    addi $t1,$zero,0x701E
    loop_spike:
        add $t0,$s0,$s6
        sw $t1,0($t0)
        addi $s0,$s0,4
    bne $s0,$s1,loop_spike
jr $ra
heart:
    add $t0,$a0,$s6
    addi $t1,$zero,0x7503
    sw $t1,0($t0)    
jr $ra
ball:
    add $t0,$a0,$s6
    addi $t1,$zero,0x744F
    sw $t1,0($t0)
jr $ra

cursor:                     //print the cursor, two arguments x and y, and dispose the last cursor
    move $s0,$a0         //s0 cursor pos
    addi $t2,$zero,0xe0		// pressed code
    addi $t7,$zero,0xf0     // ps2 break code
	addi $t0,$zero,0xc
	sll $s3,$t0,28
    addi $s4,$s6,0x3500     //s4= c3500 (800000)
    move $t8,$zero
    loop_10:
        lw $t0,0($s7)
        srl $t1,$t0,31
        addi $t8,$t8,1
    beq $t8,$s4,refresh
    beq $t1,$zero,loop_10
    fetched:
        andi $t0,$t0,0xff
        beq $t0,$t2,another_key
        beq $t0,$t7,break_code
        j process_key
        break_code:
            addi $s2,$zero,1
        another_key:
            lw $t0,0($s7)
            srl $t1,$t0,31
            beq $t1,$zero,another_key
            j fetched
    process_key:
        //TODO: boundary 
        move $s1,$s0
        bne $s2,$zero,ignore
            move $a0,$t0
            jal translate_switch
            act:
            bne $s2,$zero,ignore
                move $a0,$s0
                jal erase
                move $a0,$s1
                jal ball
                move $s0,$s1
ignore:
    move $s2,$zero
    j loop_10
erase:
    addi $t1,$zero,0x7020
    add $t0,$s6,$a0
    sw $t1,0($t0)
jr $ra
//end of cursor

refresh:
    move $a0,$s0
    jal erase
    add $t0,$s0,$s6
    lw $t1,320($t0)
	andi $t1,$t1,0xffff
    addi $t9,$zero,0x7020
    bne $t9,$t1,go_up
    j go_down
    go_up:
        jal ball
        addi $t9,$zero,960
        slt $v0,$s0,$t9
        bne $v0,$zero,scroll_down
        addi $s0,$s0,-320
	j scroll_down
    go_down:
        addi $a0,$s0,640
        jal ball
        addi $t9,$s5,-320
        slt $v0,$s0,$t9
        beq $v0,$zero,scroll_down
        addi $s0,$s0,320
scroll_down:
	addi $t0,$zero,960
	loop_sd1:
		add $t1,$t0,$s6
		lw $t9,0($t1)
		sw $t9,-320($t1)
		addi $t0,$t0,4
	bne $t0,$s5,loop_sd1
end_scroll:
	addi $t0,$t0,-320
	addi $t1,$zero,0x7020
	loop_sd2:
		add $t9,$t0,$s6
		sw $t1,0($t9)
		addi $t0,$t0,4
	bne $t0,$s5,loop_sd2
	move $t8,$zero
	j ignore

translate_switch:
    addi $t1,$zero,107 //left
    beq $t1,$a0,left
    addi $t1,$zero,116 //right
    beq $t1,$a0,right
    j end_switch
    left:
        addi $s1,$s0,-4
        slt $t1,$s1,$zero
        bne $t1,$zero,ignore
        j act
    right:
        addi $s1,$s0,4
        slt $t1,$s1,$zero
        bne $t1,$zero,ignore
        j act
    end_switch:
jr $ra
