gen:
    lw ra,0($sp)
    addi $sp,$sp,-4
    addi r1,zero,19
    divu heap,r1
    mfhi r1
    slti r1,r1,2
    // TODO: decide the frequency of the panel
    beq zero,r1,gen_end
        addi r2,zero,17
        // decide hostile or friendly
        divu heap,r2
        mfhi r2
        addi r3,zero,72
        // starting position
        divu heap,r3
        mfhi r3
        slti r2,r2,2
        bne r2,zero,r2
            jal DRAW_BROAD(r3,LASTLINE)
            j panel_join
        case_spike:
            jal DRAW_SPIKE(r3,LASTLINE)
        panel_join:
        jal RAMDOM
    gen_end:
    addi $sp,$sp,4
    lw ra,0($sp)
jr ra

// divu: quotiont in lo, remainder in hi
// TODO: generate life; generate the initial condition (should be easy)
// chosen to be prime to ensure the independency
// broad length: 8
// FIXME: ensure heap !=0; generate a seed for startup (use a counter)
